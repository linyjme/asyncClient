package initialize

import (
	"fmt"
	"time"

	"niceBackend/common/global"
	_ "niceBackend/docs"
	"niceBackend/internal/middleware"

	"github.com/gin-gonic/gin"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
)

// 初始化总路由

func Routers() *gin.Engine {
	var Router = gin.Default()
	//gin.SetMode(gin.ReleaseMode)
	if gin.Mode() == gin.DebugMode {
		fmt.Println("debug")
	}
	gin.SetMode(gin.ReleaseMode)
	Router.NoMethod(global.HandleNotFound)
	Router.NoRoute(global.HandleNotFound)
	Router.Use(global.ErrHandler())
	// Router.Use(middleware.LoadTls())  // https
	global.NiceLog.Info("use middleware logger")
	Router.Use(middleware.GlobalMiddleWare()) // 全局中间件
	Router.Use(middleware.Cors())             // 跨域
	global.NiceLog.Info("use middleware cors")
	Router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	global.NiceLog.Info("register swagger handler")
	//Router.StaticFS(AppStaticPath, http.Dir(AppStaticPath))
	//Router.StaticFile("/", "./resources/favicon.ico")
	// 方便统一添加路由组前缀 多服务器上线使用
	PrivateGroup := Router.Group("")
	PrivateGroup.Use(middleware.JWTAuth())
	{
		// Code generated by niceBackend Begin; DO NOT EDIT.
		// Code generated by niceBackend End; DO NOT EDIT.
	}
	LimitGroup := Router.Group("")
	LimitGroup.Use(middleware.RateLimitMiddleware(time.Millisecond*10, 1000)).Use(middleware.JWTAuth())
	{
		//router.InitApiRouter(LimitGroup) // 注册功能api路由
		// Code generated by niceBackend Begin; DO NOT EDIT.
		// Code generated by niceBackend End; DO NOT EDIT.
	}
	global.NiceLog.Info("router register success")
	return Router
}
